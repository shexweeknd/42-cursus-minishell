SIGNAUX:

- Ctrl + C [FINISHED] [TOTEST]
- Ctrl + D [FINISHED] [TOTEST]
- Ctrl + \ [FINISHED] [TOTEST]

GERER les leaks d'history lors des executions de commandes multiples

DEBUG de secondary prompt:
'''
    Minishell$ ls |
    > ^C
    Minishell$ ^C

    Minishell$ 
'''

GERER '&' comme process en fond

CORRIGER 'ls || ls | ls' qui quitte automatiquement

UPDATE : 
[FINISHED] int	ft_get_info_len(char *cmd) ==> cmd_utils.c

MANDATORY TESTS:
    - 'cat /dev/random | ls' (doit executer ls sans attendre)
    - '> foo' (creer foo et passe a get_line())
    - '/bin/ls' (doit s'executer)
    - 'echo "it works"' (doit afficher comme dans bash)
    - 'echo it works' (doit afficher comme dans bash)
    - 'cd ~'
    - 'cd ~/path/of/your/choice/'
    - 'cd .'
    - 'cd ../'
    - 'cd -'
    - '/bin/pwd' (doit pouvoir lancer pwd)
    - 'setenv' et 'unsetenv'
    - 'setenv FOO=bar' ou 'setenv FOO bar'
    - 'unsetenv FOO' ou 'setenv FOO bar'
    - '$? || echo $?'
    - 'echo $? + $?'
    - 'echo "cat lol.c | cat > lol.c"' (affiche 'cat lol.c | cat > lol.c' sans attendre)
    - 'cat | cat | ls' (affiche ls avant d'attendre le input de cat)
    